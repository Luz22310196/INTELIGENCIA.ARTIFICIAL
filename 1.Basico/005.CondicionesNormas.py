# NORMAS Y CONVENCIONES DE NOMBRES DE VARIABLES EN PYTHON

# 1. LAS VARIABLES DEBEN COMENZAR CON UNA LETRA O UN GUION BAJO (_)
# EJEMPLO VÁLIDO:
nombre_usuario = "Juan"  # NOMBRE DE USUARIO USANDO GUION BAJO
edad = 25  # VARIABLE 'edad' INICIALIZADA CON UN VALOR ENTERO

# 2. NO PUEDEN COMENZAR CON NÚMEROS
# EJEMPLO INVÁLIDO:
# 1edad = 30  # NO SE PUEDE INICIAR UNA VARIABLE CON UN NÚMERO

# 3. LAS VARIABLES PUEDEN CONTENER LETRAS, NÚMEROS Y GUIONES BAJOS (_)
usuario_2 = "Pedro"  # VARIABLE 'usuario_2' INCLUYE UN NÚMERO, PERO COMIENZA CON LETRA

# 4. NO PUEDEN SER PALABRAS RESERVADAS DE PYTHON
# EJEMPLO INVÁLIDO:
# def = 10  # 'def' ES UNA PALABRA RESERVADA Y NO PUEDE SER UTILIZADA COMO NOMBRE DE VARIABLE

# 5. SE RECOMIENDA USAR LETRAS MINÚSCULAS Y GUIONES BAJOS PARA NOMBRES DE VARIABLES
nombre_completo = "Ana María"  # CONVENCIÓN EN PYTHON: 'nombre_completo' EN MINÚSCULAS Y CON GUIONES BAJOS

# 6. PARA NOMBRES DE CLASES, SE USA LA NOTACIÓN CAMELCASE (PRIMERA LETRA MAYÚSCULA Y SIN GUIONES BAJOS)
class Persona:  # 'Persona' SE DEFINE EN CAMELCASE, INICIANDO CON MAYÚSCULA
    def __init__(self, nombre):
        self.nombre = nombre

# 7. LAS VARIABLES NO DEBEN SER DEMASIADO LARGAS O COMPLEJAS
nombre_cliente = "Luis"  # UNA VARIABLE CLARA Y CORTA: 'nombre_cliente'

# 8. EVITAR EL USO DE CARACTERES ESPECIALES COMO @, $, %, ETC.
# EJEMPLO INVÁLIDO:
# nombre@usuario = "Carlos"  # 'nombre@usuario' ES INVÁLIDO POR EL CARÁCTER '@'

# 9. UTILIZA NOMBRES DESCRIPTIVOS PARA LAS VARIABLES
# NOMBRE DESCRIPTIVO QUE INDICA QUE SE TRATA DE LA EDAD DE UNA PERSONA
edad_persona = 40

# 10. SE PUEDE UTILIZAR UN GUION BAJO PARA SEPARAR PALABRAS EN UN NOMBRE DE VARIABLE
# EJEMPLO VÁLIDO:
total_ventas = 5000  # 'total_ventas' SIGUE LA CONVENCIÓN DE USAR GUIONES BAJOS

# EJEMPLO DE UNA FUNCIÓN EN CONVENCIÓN PEP-8 (ESTILO DE CÓDIGO DE PYTHON)
def calcular_area(base, altura):
    return base * altura  # CALCULA EL ÁREA DE UN TRIÁNGULO

# EJEMPLO DE USO DE LA FUNCIÓN
area = calcular_area(5, 10)  # CALCULA EL ÁREA PASANDO LA BASE Y ALTURA

